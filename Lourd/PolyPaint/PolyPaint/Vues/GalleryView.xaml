<UserControl x:Class="PolyPaint.Vues.GalleryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:PolyPaint.VueModeles"
             xmlns:Vues="clr-namespace:PolyPaint.Vues"
             mc:Ignorable="d"              
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--Material Design-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Green.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <local:VueModele x:Key="VueModele" />

            <Style x:Key="CanvasListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="2,0,0,0"/>
                <Setter Property="Margin" Value="0"/>
            </Style>

            <DataTemplate x:Key="CanvasDataTemplate">
                <Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource MaterialDesignDivider}"
                    Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                    Height="30" Margin="0,0,0,0">
                    <Grid>
                        <!--Name-->
                        <TextBlock HorizontalAlignment="Left"
                               Margin="5,0" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" FontSize="16"
                               Text="{Binding name}" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
                            <TextBlock Text="Protected" x:Name="LockedIcon" Visibility="Visible" HorizontalAlignment="Right"/>
                            <TextBlock Text="Unprotected" x:Name="UnlockedIcon" Visibility="Collapsed" HorizontalAlignment="Right"/>
                            <Button Content="Join" x:Name="ButtonJoinUnprotected" Visibility="Visible"
                                    Command="{Binding Path=DataContext.JoinUnprotectedCanvasCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                    CommandParameter="{Binding}"
                                    Width="75" Height="20" Padding="0,0,0,0" Margin="20,0,0,0"/>
                            <Button Content="Join" x:Name="ButtonJoinProtected" Visibility="Collapsed"
                                    Command="{Binding Path=DataContext.JoinProtectedCanvasCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                    CommandParameter="{Binding}"
                                    Width="75" Height="20" Padding="0,0,0,0" Margin="20,0,0,0"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding password}" Value="">
                        <Setter Property="Visibility" TargetName="LockedIcon" Value="Collapsed"/>
                        <Setter Property="Visibility" TargetName="ButtonJoinProtected" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding password}" Value="">
                        <Setter Property="Visibility" TargetName="UnlockedIcon" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="ButtonJoinUnprotected" Value="Visible"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger>
            <i:InvokeCommandAction Command="{Binding Source={StaticResource VueModele}, 
                          Path=InitializeDrawingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <materialDesign:Card VerticalAlignment="Center" HorizontalAlignment="Center" Width="1100" Height="700" Margin="0">
        
        <Grid>
            <TextBlock Height="50" Width="400" Margin="14,18,686,632" FontSize="35" FontFamily="Comic Sans MS">Your gallery</TextBlock>
            <Rectangle HorizontalAlignment="Stretch" Fill="Black" Margin="11,75,300,620"></Rectangle>

            <TextBlock Height="50" Width="400" Margin="14,114,686,536" FontSize="35" FontFamily="Comic Sans MS">Private canvases</TextBlock>

            <StackPanel Margin="12,165,620,70" VerticalAlignment="Top">
                <ListBox MaxHeight="450"
                         ItemsSource="{Binding PrivateCanvases}" 
                         ItemTemplate="{DynamicResource CanvasDataTemplate}"
                         ItemContainerStyle="{DynamicResource CanvasListBoxItemStyle}"
                         ScrollViewer.VerticalScrollBarVisibility="Visible"/>
            </StackPanel>

            <TextBlock Height="50" Width="400" Margin="529,118,171,532" FontSize="35" FontFamily="Comic Sans MS">Public canvases</TextBlock>
            <StackPanel Margin="512,165,120,70"  VerticalAlignment="Top">
                <ListBox 
                    MaxHeight="450"
                    ItemsSource="{Binding PublicCanvases}" 
                    ItemTemplate="{DynamicResource CanvasDataTemplate}"
                    ItemContainerStyle="{DynamicResource CanvasListBoxItemStyle}"/>
            </StackPanel>
            
            <Rectangle VerticalAlignment="Stretch" Fill="Black" Margin="491,132,604,68"></Rectangle>
            
            <Button Content="New Canvas" Margin="923,31,27,637" Click="CreateCanvas" Width="150"/>
            
            <Button Content="DrawingView" Margin="930,645,20,23" Command="{Binding DrawingViewCommand}" Width="150"/>
            <Button Content="Disconnect" Margin="20,648,930,20" Command="{Binding LogoutCommand}" Width="150"/>
            
            <Button Content="Refresh canvas" Margin="758,644,192,24" Command="{Binding RefreshCanvasesCommand}" Width="150"/>
            <Button Content="Reset Server" Margin="581,644,369,24" Command="{Binding ResetServerCommand}" Width="150"/>
            <Popup x:Name="popUpCreateCanvas" Placement="Center">
                <Vues:CreateCanvasPopup x:Name="popUpCreateCanvasVue"/>
            </Popup>
        </Grid>
        
    </materialDesign:Card>
</UserControl>